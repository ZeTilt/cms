/**
 * Page Editor JavaScript
 * Handles dual editor (WYSIWYG for blog, source code for pages) and preview functionality
 */

// Global variables
let previewMode = false;
let quill = null;
let currentEditorType = null;

// Initialize editors based on content type
function initializeEditors() {
    const typeRadios = document.querySelectorAll('input[name="type"]');
    const pageEditor = document.getElementById('page-editor');
    const blogEditor = document.getElementById('blog-editor');
    
    if (!pageEditor || !blogEditor) {
        console.log('Editors not found, skipping initialization');
        return;
    }
    
    function switchEditor(type) {
        currentEditorType = type;
        console.log('Switching to editor type:', type);
        
        if (type === 'page') {
            pageEditor.classList.remove('hidden');
            blogEditor.classList.add('hidden');
            
            // Destroy Quill if it exists
            if (quill) {
                quill = null;
            }
        } else {
            pageEditor.classList.add('hidden');
            blogEditor.classList.remove('hidden');
            
            // Initialize Quill for blog posts
            if (!quill) {
                initializeQuill();
            }
        }
        updatePreview();
    }
    
    function initializeQuill() {
        try {
            quill = new Quill('#quill-editor', {
                theme: 'snow',
                modules: {
                    toolbar: [
                        [{ 'header': [1, 2, 3, false] }],
                        ['bold', 'italic', 'underline', 'strike'],
                        [{ 'color': [] }, { 'background': [] }],
                        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                        [{ 'indent': '-1'}, { 'indent': '+1' }],
                        [{ 'align': [] }],
                        ['link', 'blockquote', 'code-block'],
                        ['clean']
                    ]
                }
            });
            
            quill.on('text-change', syncContent);
            console.log('Quill editor initialized');
        } catch (error) {
            console.error('Error initializing Quill:', error);
        }
    }
    
    // Get initial type
    const checkedType = document.querySelector('input[name="type"]:checked');
    if (checkedType) {
        switchEditor(checkedType.value);
    }
    
    // Listen for type changes
    typeRadios.forEach(radio => {
        radio.addEventListener('change', function() {
            switchEditor(this.value);
        });
    });
}

// Sync content with appropriate field
function syncContent() {
    if (currentEditorType === 'blog' && quill) {
        const content = quill.root.innerHTML;
        const textarea = document.getElementById('content-wysiwyg');
        if (textarea) {
            textarea.value = content;
        }
    }
    updatePreview();
}

function updatePreview() {
    if (!previewMode) return;
    
    let content;
    if (currentEditorType === 'page') {
        const sourceTextarea = document.getElementById('content-source');
        content = sourceTextarea ? sourceTextarea.value : '';
    } else if (quill) {
        content = quill.root.innerHTML;
    } else {
        content = '';
    }
    
    const previewContent = document.getElementById('preview-content');
    if (previewContent) {
        if (content.trim() && content !== '<p><br></p>') {
            previewContent.innerHTML = content;
        } else {
            previewContent.innerHTML = '<p class="text-gray-500">Start typing to see the preview...</p>';
        }
    }
}

function updateSlug() {
    const titleInput = document.getElementById('title');
    const slugInput = document.getElementById('slug');
    
    if (!titleInput || !slugInput) return;
    
    const title = titleInput.value;
    if (!slugInput.value || slugInput.dataset.autoGenerated) {
        slugInput.value = title.toLowerCase()
            .replace(/[^a-z0-9\s-]/g, '')
            .replace(/\s+/g, '-')
            .replace(/-+/g, '-')
            .trim('-');
        slugInput.dataset.autoGenerated = 'true';
    }
}

// Initialize everything when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    console.log('Page editor JS loaded');
    
    // Initialize editors
    initializeEditors();
    
    // Add listener for source code editor changes
    const sourceTextarea = document.getElementById('content-source');
    if (sourceTextarea) {
        sourceTextarea.addEventListener('input', updatePreview);
    }
    
    // Preview toggle functionality
    const toggleButton = document.getElementById('toggle-preview');
    if (toggleButton) {
        toggleButton.addEventListener('click', function() {
            previewMode = !previewMode;
            const container = document.getElementById('content-container');
            const previewColumn = document.getElementById('preview-column');
            const toggleText = document.getElementById('preview-toggle-text');
            
            if (previewMode) {
                container.classList.add('grid-cols-2');
                previewColumn.classList.remove('hidden');
                toggleText.textContent = 'Hide Preview';
                updatePreview();
            } else {
                container.classList.remove('grid-cols-2');
                previewColumn.classList.add('hidden');
                toggleText.textContent = 'Show Preview';
            }
        });
    }
    
    // Form submission handler
    const form = document.querySelector('form');
    if (form) {
        form.addEventListener('submit', function() {
            if (currentEditorType === 'blog' && quill) {
                const content = quill.root.innerHTML;
                const textarea = document.getElementById('content-wysiwyg');
                if (textarea) {
                    textarea.value = content;
                }
            }
        });
    }
    
    // Slug auto-generation
    const titleInput = document.getElementById('title');
    const slugInput = document.getElementById('slug');
    
    if (titleInput) {
        titleInput.addEventListener('input', updateSlug);
    }
    
    if (slugInput) {
        slugInput.addEventListener('input', function() {
            this.dataset.autoGenerated = 'false';
        });
    }
});