{% extends 'base.html.twig' %}

{% block title %}{{ gallery.title }} - Photo Gallery{% endblock %}

{% block body %}
<div class="min-h-screen bg-white">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="{{ path('app_home') }}" class="text-xl font-semibold text-gray-900">Photography</a>
                </div>
                <div class="flex items-center space-x-8">
                    <a href="{{ path('app_home') }}" class="text-gray-700 hover:text-gray-900">Home</a>
                    <a href="{{ path('public_galleries_list') }}" class="text-gray-900 font-medium">Galleries</a>
                    <a href="{{ path('public_blog_list') }}" class="text-gray-700 hover:text-gray-900">Blog</a>
                    <a href="{{ path('app_login') }}" class="text-indigo-600 hover:text-indigo-900 text-sm">Admin</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Breadcrumb -->
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 pt-6">
        <nav class="flex" aria-label="Breadcrumb">
            <ol class="flex items-center space-x-2">
                <li>
                    <a href="{{ path('public_galleries_list') }}" class="text-gray-500 hover:text-gray-700">Galleries</a>
                </li>
                <li class="flex items-center">
                    <svg class="flex-shrink-0 h-4 w-4 text-gray-400 mx-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                    <span class="text-gray-900 font-medium">{{ gallery.title }}</span>
                </li>
            </ol>
        </nav>
    </div>

    <!-- Gallery Header -->
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">{{ gallery.title }}</h1>
            {% if gallery.description %}
                <p class="text-lg text-gray-600 max-w-3xl mx-auto">{{ gallery.description }}</p>
            {% endif %}
            <div class="mt-4 text-sm text-gray-500">
                {{ gallery.images|length }} photos ‚Ä¢ Updated {{ gallery.updatedAt|date('F j, Y') }}
            </div>
            
            <!-- Print Orders Information -->
            <div class="mt-6 max-w-2xl mx-auto">
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <div class="text-center">
                        <h3 class="text-lg font-medium text-blue-900">üì∏ Commandez vos tirages photo</h3>
                        <p class="text-sm text-blue-600 mt-2">S√©lectionnez vos photos pr√©f√©r√©es et commandez des tirages professionnels</p>
                        <p class="text-xs text-blue-500 mt-1">Partenariat CEWE - Qualit√© professionnelle garantie</p>
                        
                        <div class="mt-4 flex justify-center space-x-3">
                            <button onclick="togglePrintMode()" id="print-mode-btn" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors">
                                üñ®Ô∏è Mode Tirage
                            </button>
                            <button onclick="openBulkPrintModal()" id="bulk-print-btn" class="hidden bg-orange-600 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition-colors opacity-50 cursor-not-allowed" disabled>
                                ‚ûï Ajouter S√©lection au Panier (<span id="selected-count">0</span>)
                            </button>
                            <button onclick="openCartModal()" class="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition-colors">
                                üõí Voir Panier (<span id="cart-count">0</span>)
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Images Grid -->
        {% if gallery.images is empty %}
            <div class="text-center py-16">
                <svg class="mx-auto h-16 w-16 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                <h3 class="mt-4 text-lg font-medium text-gray-900">No images in this gallery yet</h3>
                <p class="mt-2 text-gray-500">Images will appear here when they are uploaded.</p>
            </div>
        {% else %}
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4" id="gallery-grid">
                {% for image in gallery.images %}
                    <div class="group relative" data-image-id="{{ image.id }}">
                        <div class="aspect-square bg-gray-100 rounded-lg overflow-hidden cursor-pointer" onclick="openLightbox({{ loop.index0 }})">
                            <img src="{{ path('secure_gallery_thumbnail', {galleryId: gallery.id, filename: image.filename}) }}" 
                                 alt="{{ image.alt }}" 
                                 class="w-full h-full object-cover group-hover:opacity-75 transition-opacity"
                                 loading="lazy">
                        </div>
                        
                        <!-- Print Mode Overlay -->
                        <div class="print-mode-overlay hidden absolute inset-0 bg-black bg-opacity-50 rounded-lg flex items-center justify-center">
                            <button onclick="openPrintModal({{ image.id }})" class="bg-white text-gray-900 px-4 py-2 rounded-md hover:bg-gray-100 transition-colors">
                                üñ®Ô∏è Commander
                            </button>
                        </div>
                        
                        <!-- Selection Checkbox (for print mode) -->
                        <div class="print-mode-checkbox hidden absolute top-2 left-2">
                            <input type="checkbox" class="w-5 h-5 text-blue-600 bg-white border-gray-300 rounded focus:ring-blue-500" 
                                   onchange="toggleImageSelection({{ image.id }}, this.checked)">
                        </div>
                        
                        {% if image.caption %}
                            <p class="mt-2 text-sm text-gray-600 truncate">{{ image.caption }}</p>
                        {% endif %}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    </div>

    <!-- Footer -->
    <footer class="bg-gray-50 border-t mt-20">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="text-center text-gray-500 text-sm">
                <p>&copy; {{ 'now'|date('Y') }} Photography Portfolio. Powered by ZeTilt CMS.</p>
            </div>
        </div>
    </footer>
</div>

<!-- Lightbox Modal -->
<div id="lightbox" class="fixed inset-0 bg-black bg-opacity-90 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
        <!-- Close Button -->
        <button onclick="closeLightbox()" class="absolute top-4 right-4 text-white hover:text-gray-300 z-60">
            <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>

        <!-- Navigation Buttons -->
        <button onclick="previousImage()" class="absolute left-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 z-60">
            <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        <button onclick="nextImage()" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 z-60">
            <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>

        <!-- Image Container -->
        <div class="max-w-full max-h-full flex items-center justify-center">
            <img id="lightbox-image" src="" alt="" class="max-w-full max-h-full object-contain">
        </div>

        <!-- Image Info -->
        <div id="lightbox-info" class="absolute bottom-4 left-4 right-4 text-center text-white">
            <h3 id="lightbox-caption" class="text-lg font-medium mb-2"></h3>
            <p id="lightbox-counter" class="text-sm opacity-75"></p>
        </div>
    </div>
</div>

<script>
// Function to add gallery to cart
function addToCart() {
    fetch('{{ path('cart_add', {type: 'gallery', id: gallery.id}) }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: 'quantity=1'
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Galerie ajout√©e au panier !');
            // Optionally redirect to cart
            window.location.href = '{{ path('cart_index') }}';
        } else {
            alert('Erreur : ' + (data.error || 'Impossible d\'ajouter au panier'));
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Erreur lors de l\'ajout au panier');
    });
}

const images = [
    {% for image in gallery.images %}
        {
            url: '{{ path('secure_gallery_image', {galleryId: gallery.id, filename: image.filename}) }}',
            alt: '{{ image.alt|e('js') }}',
            caption: '{{ image.caption|e('js') }}',
            originalName: '{{ image.originalName|e('js') }}'
        }{% if not loop.last %},{% endif %}
    {% endfor %}
];

let currentImageIndex = 0;

function openLightbox(index) {
    currentImageIndex = index;
    updateLightboxImage();
    document.getElementById('lightbox').classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

function closeLightbox() {
    document.getElementById('lightbox').classList.add('hidden');
    document.body.style.overflow = 'auto';
}

function nextImage() {
    currentImageIndex = (currentImageIndex + 1) % images.length;
    updateLightboxImage();
}

function previousImage() {
    currentImageIndex = (currentImageIndex - 1 + images.length) % images.length;
    updateLightboxImage();
}

function updateLightboxImage() {
    const image = images[currentImageIndex];
    document.getElementById('lightbox-image').src = image.url;
    document.getElementById('lightbox-image').alt = image.alt;
    document.getElementById('lightbox-caption').textContent = image.caption || image.originalName;
    document.getElementById('lightbox-counter').textContent = `${currentImageIndex + 1} of ${images.length}`;
}

// Keyboard navigation
document.addEventListener('keydown', function(e) {
    if (!document.getElementById('lightbox').classList.contains('hidden')) {
        switch(e.key) {
            case 'Escape':
                closeLightbox();
                break;
            case 'ArrowLeft':
                previousImage();
                break;
            case 'ArrowRight':
                nextImage();
                break;
        }
    }
});

// Close lightbox when clicking on background
document.getElementById('lightbox').addEventListener('click', function(e) {
    if (e.target === this) {
        closeLightbox();
    }
});

// Print ordering functionality
let printModeActive = false;
let selectedImages = new Set();
let cartItems = 0;

function togglePrintMode() {
    printModeActive = !printModeActive;
    const btn = document.getElementById('print-mode-btn');
    const bulkBtn = document.getElementById('bulk-print-btn');
    const overlays = document.querySelectorAll('.print-mode-overlay');
    const checkboxes = document.querySelectorAll('.print-mode-checkbox');
    
    if (printModeActive) {
        btn.textContent = '‚ùå Quitter Mode Tirage';
        btn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
        btn.classList.add('bg-red-600', 'hover:bg-red-700');
        overlays.forEach(overlay => overlay.classList.remove('hidden'));
        checkboxes.forEach(checkbox => checkbox.classList.remove('hidden'));
        bulkBtn.classList.remove('hidden');
        updateSelectedCount();
    } else {
        btn.textContent = 'üñ®Ô∏è Mode Tirage';
        btn.classList.remove('bg-red-600', 'hover:bg-red-700');
        btn.classList.add('bg-blue-600', 'hover:bg-blue-700');
        overlays.forEach(overlay => overlay.classList.add('hidden'));
        checkboxes.forEach(checkbox => checkbox.classList.add('hidden'));
        bulkBtn.classList.add('hidden');
        // Clear selections when exiting print mode
        selectedImages.clear();
        checkboxes.forEach(checkbox => {
            const input = checkbox.querySelector('input[type="checkbox"]');
            if (input) input.checked = false;
        });
    }
}

function openPrintModal(imageId) {
    // Ouvrir le modal de configuration de tirage
    const modal = document.getElementById('print-modal');
    document.getElementById('print-image-id').value = imageId;
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

function closePrintModal() {
    document.getElementById('print-modal').classList.add('hidden');
    document.body.style.overflow = 'auto';
}

function toggleImageSelection(imageId, selected) {
    if (selected) {
        selectedImages.add(imageId);
    } else {
        selectedImages.delete(imageId);
    }
    updateSelectedCount();
}

function updateSelectedCount() {
    const count = selectedImages.size;
    document.getElementById('selected-count').textContent = count;
    const bulkBtn = document.getElementById('bulk-print-btn');
    
    if (count > 0) {
        bulkBtn.disabled = false;
        bulkBtn.classList.remove('opacity-50', 'cursor-not-allowed');
    } else {
        bulkBtn.disabled = true;
        bulkBtn.classList.add('opacity-50', 'cursor-not-allowed');
    }
}

function openBulkPrintModal() {
    if (selectedImages.size === 0) {
        alert('Veuillez s√©lectionner au moins une image.');
        return;
    }
    
    const modal = document.getElementById('bulk-print-modal');
    document.getElementById('bulk-selected-count').textContent = selectedImages.size;
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
    calculateBulkPrintPrice();
}

function closeBulkPrintModal() {
    document.getElementById('bulk-print-modal').classList.add('hidden');
    document.body.style.overflow = 'auto';
}

function addPrintToCart() {
    const imageId = document.getElementById('print-image-id').value;
    const format = document.getElementById('print-format').value;
    const paperType = document.getElementById('paper-type').value;
    const quantity = document.getElementById('print-quantity').value;
    
    fetch('{{ path('add_print_to_cart') }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: `image_id=${imageId}&format=${format}&paper_type=${paperType}&quantity=${quantity}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            cartItems++;
            document.getElementById('cart-count').textContent = cartItems;
            closePrintModal();
            alert('Tirage ajout√© au panier !');
        } else {
            alert('Erreur : ' + (data.error || 'Impossible d\'ajouter au panier'));
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Erreur lors de l\'ajout au panier');
    });
}

function openCartModal() {
    // Ouvrir le modal du panier
    const modal = document.getElementById('cart-modal');
    loadCartContents();
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

function closeCartModal() {
    document.getElementById('cart-modal').classList.add('hidden');
    document.body.style.overflow = 'auto';
}

function loadCartContents() {
    fetch('{{ path('cart_contents') }}')
    .then(response => response.json())
    .then(data => {
        const container = document.getElementById('cart-contents');
        container.innerHTML = '';
        
        if (data.items.length === 0) {
            container.innerHTML = '<p class="text-gray-500 text-center py-4">Votre panier est vide</p>';
            return;
        }
        
        data.items.forEach(item => {
            if (item.item_type === 'print_order') {
                const itemDiv = document.createElement('div');
                itemDiv.className = 'flex justify-between items-center p-3 border-b';
                itemDiv.innerHTML = `
                    <div>
                        <p class="font-medium">${item.item_name}</p>
                        <p class="text-sm text-gray-600">Quantit√©: ${item.quantity}</p>
                    </div>
                    <div class="text-right">
                        <p class="font-medium">${item.total_price} ‚Ç¨</p>
                        <button onclick="removeFromCart('${item.item_type}', ${item.item_id})" class="text-red-600 text-sm hover:text-red-800">
                            Supprimer
                        </button>
                    </div>
                `;
                container.appendChild(itemDiv);
            }
        });
        
        // Ajouter le total
        const totalDiv = document.createElement('div');
        totalDiv.className = 'p-3 bg-gray-50 font-bold text-right';
        totalDiv.innerHTML = `Total: ${data.total} ‚Ç¨`;
        container.appendChild(totalDiv);
    });
}

function removeFromCart(itemType, itemId) {
    fetch('{{ path('cart_remove') }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: `item_type=${itemType}&item_id=${itemId}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            loadCartContents();
            cartItems = data.cart_count || 0;
            document.getElementById('cart-count').textContent = cartItems;
        }
    });
}

function calculatePrintPrice() {
    const format = document.getElementById('print-format').value;
    const paperType = document.getElementById('paper-type').value;
    const quantity = document.getElementById('print-quantity').value;
    
    fetch('{{ path('calculate_print_price') }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `format=${format}&paper_type=${paperType}&quantity=${quantity}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.getElementById('print-price-display').textContent = data.price + ' ‚Ç¨';
        }
    });
}

function calculateBulkPrintPrice() {
    const format = document.getElementById('bulk-print-format').value;
    const paperType = document.getElementById('bulk-paper-type').value;
    const quantity = document.getElementById('bulk-print-quantity').value;
    const selectedCount = selectedImages.size;
    
    fetch('{{ path('calculate_print_price') }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `format=${format}&paper_type=${paperType}&quantity=${quantity}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const unitPrice = parseFloat(data.price);
            const totalPrice = unitPrice * selectedCount;
            const totalQuantity = quantity * selectedCount;
            document.getElementById('bulk-unit-price').textContent = data.price + ' ‚Ç¨';
            document.getElementById('bulk-total-price').textContent = totalPrice.toFixed(2) + ' ‚Ç¨';
            document.getElementById('bulk-total-quantity').textContent = totalQuantity;
        }
    });
}

function addBulkPrintToCart() {
    const format = document.getElementById('bulk-print-format').value;
    const paperType = document.getElementById('bulk-paper-type').value;
    const quantity = parseInt(document.getElementById('bulk-print-quantity').value);
    
    let addedCount = 0;
    let totalToAdd = selectedImages.size;
    
    const promises = Array.from(selectedImages).map(imageId => {
        return fetch('{{ path('add_print_to_cart') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: `image_id=${imageId}&format=${format}&paper_type=${paperType}&quantity=${quantity}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                addedCount++;
            }
            return data;
        });
    });
    
    Promise.all(promises).then(results => {
        if (addedCount === totalToAdd) {
            // Update cart count
            cartItems += totalToAdd * quantity;
            document.getElementById('cart-count').textContent = cartItems;
            
            // Clear selections
            selectedImages.clear();
            document.querySelectorAll('.print-mode-checkbox input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
            updateSelectedCount();
            
            closeBulkPrintModal();
            alert(`${addedCount} tirages ajout√©s au panier avec succ√®s !`);
        } else {
            alert(`Erreur: ${addedCount}/${totalToAdd} tirages ajout√©s. Certains ont √©chou√©.`);
        }
    }).catch(error => {
        console.error('Error:', error);
        alert('Erreur lors de l\'ajout des tirages au panier');
    });
}

// Initialize cart count on page load
document.addEventListener('DOMContentLoaded', function() {
    fetch('{{ path('cart_count') }}')
    .then(response => response.json())
    .then(data => {
        cartItems = data.count || 0;
        document.getElementById('cart-count').textContent = cartItems;
    });
});
</script>

<!-- Print Order Modal -->
<div id="print-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg max-w-md w-full p-6">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold">Commander un tirage</h3>
                <button onclick="closePrintModal()" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <input type="hidden" id="print-image-id">
            
            <div class="space-y-4">
                <div>
                    <label for="print-format" class="block text-sm font-medium text-gray-700">Format</label>
                    <select id="print-format" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" onchange="calculatePrintPrice()">
                        <option value="10x15">10x15 cm - 0,19 ‚Ç¨</option>
                        <option value="13x18">13x18 cm - 0,29 ‚Ç¨</option>
                        <option value="15x21">15x21 cm (A5) - 0,49 ‚Ç¨</option>
                        <option value="20x30">20x30 cm - 1,99 ‚Ç¨</option>
                        <option value="30x40">30x40 cm - 4,99 ‚Ç¨</option>
                    </select>
                </div>
                
                <div>
                    <label for="paper-type" class="block text-sm font-medium text-gray-700">Type de papier</label>
                    <select id="paper-type" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" onchange="calculatePrintPrice()">
                        <option value="standard">Standard (x1)</option>
                        <option value="premium">Premium (x1.5)</option>
                        <option value="canvas">Canvas (x3)</option>
                    </select>
                </div>
                
                <div>
                    <label for="print-quantity" class="block text-sm font-medium text-gray-700">Quantit√©</label>
                    <input type="number" id="print-quantity" min="1" max="50" value="1" 
                           class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                           onchange="calculatePrintPrice()">
                </div>
                
                <div class="bg-gray-50 p-3 rounded">
                    <div class="flex justify-between items-center">
                        <span class="font-medium">Prix total:</span>
                        <span id="print-price-display" class="font-bold text-blue-600">0,19 ‚Ç¨</span>
                    </div>
                </div>
            </div>
            
            <div class="mt-6 flex space-x-3">
                <button onclick="closePrintModal()" class="flex-1 bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400 transition-colors">
                    Annuler
                </button>
                <button onclick="addPrintToCart()" class="flex-1 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors">
                    Ajouter au panier
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Cart Modal -->
<div id="cart-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg max-w-2xl w-full max-h-[80vh] overflow-y-auto">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold">Panier de tirages</h3>
                    <button onclick="closeCartModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                
                <div id="cart-contents" class="space-y-2 mb-6">
                    <!-- Cart contents will be loaded here -->
                </div>
                
                <div class="flex space-x-3">
                    <button onclick="closeCartModal()" class="flex-1 bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400 transition-colors">
                        Continuer
                    </button>
                    <a href="{{ path('cart_checkout') }}" class="flex-1 bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition-colors text-center">
                        Proc√©der au paiement
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Print Order Modal -->
<div id="bulk-print-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg max-w-md w-full p-6">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold">Commander plusieurs tirages</h3>
                <button onclick="closeBulkPrintModal()" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <div class="mb-4 p-3 bg-blue-50 rounded-lg">
                <p class="text-sm text-blue-800">
                    <span class="font-medium"><span id="bulk-selected-count">0</span> images s√©lectionn√©es</span>
                    <br>
                    <span class="text-xs text-blue-600">M√™me format et papier appliqu√©s √† toutes les images</span>
                </p>
            </div>
            
            <div class="space-y-4">
                <div>
                    <label for="bulk-print-format" class="block text-sm font-medium text-gray-700">Format</label>
                    <select id="bulk-print-format" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" onchange="calculateBulkPrintPrice()">
                        <option value="10x15">10x15 cm - 0,19 ‚Ç¨</option>
                        <option value="13x18">13x18 cm - 0,29 ‚Ç¨</option>
                        <option value="15x21">15x21 cm (A5) - 0,49 ‚Ç¨</option>
                        <option value="20x30">20x30 cm - 1,99 ‚Ç¨</option>
                        <option value="30x40">30x40 cm - 4,99 ‚Ç¨</option>
                    </select>
                </div>
                
                <div>
                    <label for="bulk-paper-type" class="block text-sm font-medium text-gray-700">Type de papier</label>
                    <select id="bulk-paper-type" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" onchange="calculateBulkPrintPrice()">
                        <option value="standard">Standard (x1)</option>
                        <option value="premium">Premium (x1.5)</option>
                        <option value="canvas">Canvas (x3)</option>
                    </select>
                </div>
                
                <div>
                    <label for="bulk-print-quantity" class="block text-sm font-medium text-gray-700">Quantit√© par image</label>
                    <input type="number" id="bulk-print-quantity" min="1" max="50" value="1" 
                           class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                           onchange="calculateBulkPrintPrice()">
                </div>
                
                <div class="bg-gray-50 p-3 rounded space-y-2">
                    <div class="flex justify-between items-center text-sm">
                        <span>Prix unitaire:</span>
                        <span id="bulk-unit-price" class="font-medium">0,19 ‚Ç¨</span>
                    </div>
                    <div class="flex justify-between items-center text-sm">
                        <span>Quantit√© totale:</span>
                        <span id="bulk-total-quantity" class="font-medium">0</span>
                    </div>
                    <div class="flex justify-between items-center border-t pt-2">
                        <span class="font-medium">Prix total:</span>
                        <span id="bulk-total-price" class="font-bold text-blue-600">0,00 ‚Ç¨</span>
                    </div>
                </div>
            </div>
            
            <div class="mt-6 flex space-x-3">
                <button onclick="closeBulkPrintModal()" class="flex-1 bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400 transition-colors">
                    Annuler
                </button>
                <button onclick="addBulkPrintToCart()" class="flex-1 bg-orange-600 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition-colors">
                    Ajouter tout au panier
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}