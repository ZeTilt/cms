{% extends 'admin/base.html.twig' %}

{% block title %}{{ user.fullName }} - User Management - ZeTilt CMS{% endblock %}

{% block content %}
<!-- Header -->
<div class="bg-white shadow">
    <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center">
            <div>
                <nav class="flex" aria-label="Breadcrumb">
                    <ol role="list" class="flex items-center space-x-4">
                        <li>
                            <a href="{{ path('admin_userplus_list') }}" class="text-gray-400 hover:text-gray-500">
                                <span class="sr-only">Users</span>
                                Users Management
                            </a>
                        </li>
                        <li>
                            <div class="flex items-center">
                                <svg class="flex-shrink-0 h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                                </svg>
                                <span class="ml-4 text-sm font-medium text-gray-500">{{ user.fullName }}</span>
                            </div>
                        </li>
                    </ol>
                </nav>
                <h1 class="mt-2 text-3xl font-bold text-gray-900">{{ user.fullName }}</h1>
                <p class="mt-1 text-sm text-gray-500">Manage custom attributes for this user</p>
            </div>
        </div>
    </div>
</div>

<!-- Main content -->
<div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <div class="lg:grid lg:grid-cols-3 lg:gap-6">
        <!-- User Info -->
        <div class="lg:col-span-1">
            <div class="bg-white shadow rounded-lg p-6">
                <div class="flex items-center space-x-4">
                    <div class="h-16 w-16 rounded-full bg-indigo-500 flex items-center justify-center">
                        <span class="text-white font-medium text-xl">{{ user.firstName|slice(0, 1)|upper }}{{ user.lastName|slice(0, 1)|upper }}</span>
                    </div>
                    <div>
                        <h3 class="text-lg font-medium text-gray-900">{{ user.fullName }}</h3>
                        <p class="text-sm text-gray-500">{{ user.email }}</p>
                    </div>
                </div>
                
                <dl class="mt-6 space-y-3">
                    <div>
                        <dt class="text-sm font-medium text-gray-500">Status</dt>
                        <dd class="mt-1">
                            {% if user.active %}
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                    Active
                                </span>
                            {% else %}
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                    Inactive
                                </span>
                            {% endif %}
                        </dd>
                    </div>
                    
                    <div>
                        <dt class="text-sm font-medium text-gray-500">Roles</dt>
                        <dd class="mt-1">
                            {% for role in user.roles %}
                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 mr-1">
                                    {{ role|replace({'ROLE_': ''})|title }}
                                </span>
                            {% endfor %}
                        </dd>
                    </div>
                    
                    <div>
                        <dt class="text-sm font-medium text-gray-500">Created</dt>
                        <dd class="mt-1 text-sm text-gray-900">{{ user.createdAt|date('F j, Y g:i A') }}</dd>
                    </div>
                    
                    {% if user.updatedAt %}
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Last Updated</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ user.updatedAt|date('F j, Y g:i A') }}</dd>
                        </div>
                    {% endif %}
                </dl>
            </div>
        </div>

        <!-- Custom Attributes -->
        <div class="lg:col-span-2 mt-6 lg:mt-0">
            <div class="bg-white shadow rounded-lg">
                <div class="px-6 py-4 border-b border-gray-200">
                    <div class="flex justify-between items-center">
                        <h3 class="text-lg font-medium text-gray-900">Custom Attributes</h3>
                        <button type="button" onclick="showAddAttributeModal()" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
                            <svg class="-ml-1 mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                            </svg>
                            Add Attribute
                        </button>
                    </div>
                </div>
                
                <div class="p-6">
                    {% if attributes is empty %}
                        <div class="text-center py-12">
                            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            <h3 class="mt-2 text-sm font-medium text-gray-900">No custom attributes</h3>
                            <p class="mt-1 text-sm text-gray-500">Get started by adding a custom attribute to this user.</p>
                        </div>
                    {% else %}
                        <div class="space-y-4">
                            {% for attribute in attributes %}
                                <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg attribute-item" data-attribute-id="{{ attribute.id }}">
                                    <div class="flex-1">
                                        <div class="flex items-center space-x-3">
                                            <h4 class="text-sm font-medium text-gray-900">{{ attribute.attributeKey }}</h4>
                                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
                                                {{ attribute.attributeType }}
                                            </span>
                                        </div>
                                        <p class="mt-1 text-sm text-gray-600">
                                            {% if attribute.attributeType == 'boolean' %}
                                                {% if attribute.typedValue %}
                                                    <span class="text-green-600">✓ True</span>
                                                {% else %}
                                                    <span class="text-red-600">✗ False</span>
                                                {% endif %}
                                            {% elseif attribute.attributeType == 'date' %}
                                                {{ attribute.typedValue ? attribute.typedValue|date('F j, Y') : 'N/A' }}
                                            {% elseif attribute.attributeType == 'json' %}
                                                <code class="bg-gray-100 px-2 py-1 rounded text-xs">{{ attribute.attributeValue }}</code>
                                            {% else %}
                                                {{ attribute.attributeValue ?: 'N/A' }}
                                            {% endif %}
                                        </p>
                                        {% if attribute.updatedAt %}
                                            <p class="mt-1 text-xs text-gray-500">Updated {{ attribute.updatedAt|date('M j, Y g:i A') }}</p>
                                        {% endif %}
                                    </div>
                                    <button type="button" onclick="deleteAttribute({{ attribute.id }})" class="ml-4 text-red-600 hover:text-red-900">
                                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                    </button>
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Attribute Modal -->
<div id="addAttributeModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-gray-900">Add Custom Attribute</h3>
                <button type="button" onclick="hideAddAttributeModal()" class="text-gray-400 hover:text-gray-600">
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <form id="addAttributeForm" onsubmit="addAttribute(event)">
                <div class="space-y-4">
                    <div>
                        <label for="attributeKey" class="block text-sm font-medium text-gray-700">Attribute Key</label>
                        <input type="text" id="attributeKey" name="key" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                    
                    <div>
                        <label for="attributeType" class="block text-sm font-medium text-gray-700">Type</label>
                        <select id="attributeType" name="type" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
                            <option value="text">Text</option>
                            <option value="number">Number</option>
                            <option value="boolean">Boolean</option>
                            <option value="date">Date</option>
                            <option value="json">JSON</option>
                        </select>
                    </div>
                    
                    <div>
                        <label for="attributeValue" class="block text-sm font-medium text-gray-700">Value</label>
                        <input type="text" id="attributeValue" name="value" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
                        <div id="booleanValue" class="mt-1 hidden">
                            <select name="booleanValue" class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
                                <option value="true">True</option>
                                <option value="false">False</option>
                            </select>
                        </div>
                    </div>
                </div>
                
                <div class="flex justify-end space-x-3 mt-6">
                    <button type="button" onclick="hideAddAttributeModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700">
                        Add Attribute
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
function showAddAttributeModal() {
    document.getElementById('addAttributeModal').classList.remove('hidden');
}

function hideAddAttributeModal() {
    document.getElementById('addAttributeModal').classList.add('hidden');
    document.getElementById('addAttributeForm').reset();
}

// Toggle input type based on attribute type
document.getElementById('attributeType').addEventListener('change', function() {
    const value = this.value;
    const textInput = document.getElementById('attributeValue');
    const booleanSelect = document.getElementById('booleanValue');
    
    if (value === 'boolean') {
        textInput.classList.add('hidden');
        booleanSelect.classList.remove('hidden');
    } else {
        textInput.classList.remove('hidden');
        booleanSelect.classList.add('hidden');
        
        // Set input type based on selection
        if (value === 'number') {
            textInput.type = 'number';
        } else if (value === 'date') {
            textInput.type = 'datetime-local';
        } else {
            textInput.type = 'text';
        }
    }
});

function addAttribute(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    
    let value = formData.get('value');
    if (formData.get('type') === 'boolean') {
        value = formData.get('booleanValue');
    }
    
    const data = {
        key: formData.get('key'),
        type: formData.get('type'),
        value: value
    };
    
    fetch('{{ path('admin_userplus_add_attribute', {id: user.id}) }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert('Error: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while adding the attribute.');
    });
}

function deleteAttribute(attributeId) {
    if (!confirm('Are you sure you want to delete this attribute?')) {
        return;
    }
    
    fetch(`{{ path('admin_userplus_delete_attribute', {userId: user.id, attributeId: '__ID__'}) }}`.replace('__ID__', attributeId), {
        method: 'DELETE'
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.querySelector(`[data-attribute-id="${attributeId}"]`).remove();
        } else {
            alert('Error: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while deleting the attribute.');
    });
}
</script>
{% endblock %}