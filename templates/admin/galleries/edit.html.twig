{% extends 'admin/base.html.twig' %}

{% block title %}{{ gallery ? 'Edit Gallery' : 'New Gallery' }} - Admin{% endblock %}

{% block breadcrumb_items %}
    <li>
        <div class="flex items-center">
            <svg class="flex-shrink-0 h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
            <a href="{{ path('admin_galleries_list') }}" class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700">Galleries</a>
        </div>
    </li>
    <li>
        <div class="flex items-center">
            <svg class="flex-shrink-0 h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
            <span class="ml-4 text-sm font-medium text-gray-500" aria-current="page">{{ gallery ? 'Edit: ' ~ gallery.title : 'New Gallery' }}</span>
        </div>
    </li>
{% endblock %}

{% block content %}
<!-- Header -->
<div class="bg-white shadow">
    <div class="max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <div class="flex items-center space-x-4">
            <a href="{{ path('admin_galleries_list') }}" class="text-gray-400 hover:text-gray-600">
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                </svg>
            </a>
            <h1 class="text-3xl font-bold text-gray-900">
                {{ gallery ? 'Edit Gallery' : 'New Gallery' }}
            </h1>
        </div>
    </div>
</div>

<!-- Content -->
<div class="max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <form method="post" enctype="multipart/form-data" class="space-y-6">
            <!-- Basic Information -->
            <div class="bg-white shadow rounded-lg p-6">
                <h2 class="text-lg font-medium text-gray-900 mb-4">Basic Information</h2>
                
                <div class="grid grid-cols-1 gap-6">
                    <!-- Title -->
                    <div>
                        <label for="title" class="block text-sm font-medium text-gray-700">Title *</label>
                        <input type="text" id="title" name="title" value="{{ gallery.title }}" 
                               class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" 
                               required maxlength="255">
                        <p class="mt-1 text-sm text-gray-500">The name of your gallery</p>
                    </div>

                    <!-- Description -->
                    <div>
                        <label for="description" class="block text-sm font-medium text-gray-700">{{ 'fields.description'|trans({}, 'admin') }}</label>
                        <div id="description-editor" style="height: 150px;">{{ gallery.description|raw }}</div>
                        <textarea id="description" name="description" class="hidden">{{ gallery.description }}</textarea>
                        <p class="mt-1 text-sm text-gray-500">Optional description for your gallery</p>
                    </div>
                </div>
            </div>

            <!-- Visibility Settings -->
            <div class="bg-white shadow rounded-lg p-6">
                <h2 class="text-lg font-medium text-gray-900 mb-4">Visibility Settings</h2>
                
                <div class="space-y-4">
                    <!-- Visibility -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Visibility</label>
                        <div class="space-y-2">
                            <label class="inline-flex items-center">
                                <input type="radio" name="visibility" value="public" {{ gallery.visibility != 'private' ? 'checked' : '' }} 
                                       class="form-radio text-indigo-600">
                                <span class="ml-2">
                                    <span class="text-sm font-medium text-gray-900">Public</span>
                                    <span class="text-sm text-gray-500 block">Anyone can view this gallery</span>
                                </span>
                            </label>
                            <label class="inline-flex items-center">
                                <input type="radio" name="visibility" value="private" {{ gallery.visibility == 'private' ? 'checked' : '' }} 
                                       class="form-radio text-indigo-600" onchange="toggleAccessCode()">
                                <span class="ml-2">
                                    <span class="text-sm font-medium text-gray-900">Private</span>
                                    <span class="text-sm text-gray-500 block">Only you and people with the access code can view</span>
                                </span>
                            </label>
                        </div>
                    </div>

                    <!-- Access Code -->
                    <div id="access-code-field" class="{{ gallery.visibility != 'private' ? 'hidden' : '' }}">
                        <label for="access_code" class="block text-sm font-medium text-gray-700">Access Code</label>
                        <input type="text" id="access_code" name="access_code" value="{{ gallery.accessCode }}" 
                               class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" 
                               maxlength="50">
                        <p class="mt-1 text-sm text-gray-500">Leave empty to make it accessible to logged-in users only</p>
                    </div>

                    <!-- Pricing Settings -->
                    <div class="mt-6">
                        <h3 class="text-sm font-medium text-gray-900 mb-4">üí∞ Param√®tres de Tarification</h3>
                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-3">Type d'acc√®s</label>
                                <div class="space-y-2">
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="pricing_type" value="free" {{ gallery.pricingType == 'free' ? 'checked' : '' }} 
                                               class="form-radio text-indigo-600" onchange="togglePricing()">
                                        <span class="ml-2">
                                            <span class="text-sm font-medium text-gray-900">‚úÖ Gratuit</span>
                                            <span class="text-sm text-gray-500 block">Acc√®s libre sans paiement</span>
                                        </span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="pricing_type" value="paid" {{ gallery.pricingType == 'paid' ? 'checked' : '' }} 
                                               class="form-radio text-indigo-600" onchange="togglePricing()">
                                        <span class="ml-2">
                                            <span class="text-sm font-medium text-gray-900">üí≥ Payant</span>
                                            <span class="text-sm text-gray-500 block">Acc√®s apr√®s paiement</span>
                                        </span>
                                    </label>
                                </div>
                            </div>

                            <!-- Price Field -->
                            <div id="price-field" class="{{ gallery.pricingType != 'paid' ? 'hidden' : '' }}">
                                <label for="access_price" class="block text-sm font-medium text-gray-700">Prix d'acc√®s (‚Ç¨)</label>
                                <div class="mt-1 relative rounded-md shadow-sm">
                                    <input type="number" id="access_price" name="access_price" 
                                           value="{{ gallery.accessPrice }}" step="0.01" min="0"
                                           class="block w-full pr-12 border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                                           placeholder="0.00">
                                    <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                                        <span class="text-gray-500 sm:text-sm">‚Ç¨</span>
                                    </div>
                                </div>
                                <p class="mt-1 text-sm text-gray-500">Prix pour acc√©der aux images en pleine r√©solution</p>
                            </div>
                        </div>
                    </div>

                    <!-- Expiration Settings -->
                    <div class="mt-6">
                        <h3 class="text-sm font-medium text-gray-900 mb-4">‚è∞ Param√®tres d'Expiration</h3>
                        <div class="space-y-4">
                            <div>
                                <label for="duration_days" class="block text-sm font-medium text-gray-700">Duration (days)</label>
                                <input type="number" id="duration_days" name="duration_days" 
                                       value="{{ gallery.durationDays }}" min="1" max="365"
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                                       onchange="updateEndDate()">
                                <p class="mt-1 text-sm text-gray-500">Gallery will expire after this many days from creation</p>
                            </div>
                            
                            <div class="text-center text-sm text-gray-500">or</div>
                            
                            <div>
                                <label for="end_date" class="block text-sm font-medium text-gray-700">Specific End Date</label>
                                <input type="datetime-local" id="end_date" name="end_date" 
                                       value="{{ gallery.endDate ? gallery.endDate.format('Y-m-d\\TH:i') : '' }}"
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                                       onchange="clearDuration()">
                                <p class="mt-1 text-sm text-gray-500">Gallery will expire on this specific date and time</p>
                            </div>
                            
                            {% if gallery.endDate %}
                                <div class="p-3 bg-blue-50 border border-blue-200 rounded-md">
                                    <div class="flex">
                                        <div class="flex-shrink-0">
                                            <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                                            </svg>
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-blue-800">
                                                {% if gallery.isExpired %}
                                                    Gallery has expired
                                                {% else %}
                                                    Gallery expires in {{ gallery.daysUntilExpiration }} day(s)
                                                {% endif %}
                                            </h3>
                                            <div class="mt-2 text-sm text-blue-700">
                                                <p>Expires on {{ gallery.endDate.format('F j, Y \\a\\t g:i A') }}</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>

            <!-- Cover Image -->
            <div class="bg-white shadow rounded-lg p-6">
                <h2 class="text-lg font-medium text-gray-900 mb-4">Cover Image</h2>
                
                <div class="space-y-4">
                    <!-- Current Image Preview -->
                    <div id="current-image-preview" class="{{ gallery.coverImage ? '' : 'hidden' }}">
                        <div class="relative inline-block">
                            <img id="current-image" src="{{ gallery.coverImage }}" alt="Current cover" class="h-32 w-48 object-cover rounded border shadow-sm">
                            <button type="button" onclick="removeCoverImage()" class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center hover:bg-red-600 transition-colors">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                        <p class="text-sm text-gray-500 mt-1">Current cover image</p>
                    </div>

                    <!-- New Image Preview -->
                    <div id="new-image-preview" class="hidden">
                        <div class="relative inline-block">
                            <img id="preview-image" alt="Preview" class="h-32 w-48 object-cover rounded border shadow-sm">
                            <button type="button" onclick="clearFileInput()" class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center hover:bg-red-600 transition-colors">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                        <p class="text-sm text-gray-600 mt-1">New cover image (will replace current)</p>
                    </div>
                    
                    <!-- Upload Area -->
                    <div id="upload-area" class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors cursor-pointer" onclick="document.getElementById('cover_image').click()">
                        <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <div class="mt-4">
                            <p class="text-sm text-gray-600">
                                <span class="font-medium text-indigo-600">Click to upload</span> or drag and drop
                            </p>
                            <p class="text-xs text-gray-500">PNG, JPG, GIF up to 5MB</p>
                        </div>
                        <input type="file" id="cover_image" name="cover_image" accept="image/*" class="hidden" onchange="previewFile(this)">
                    </div>
                    
                    <p class="text-sm text-gray-500">Optional. If not provided, the first image will be used as cover.</p>
                </div>
            </div>

            <!-- Form Actions -->
            <div class="flex justify-end space-x-3">
                <a href="{{ path('admin_galleries_list') }}" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    Cancel
                </a>
                <button type="submit" class="bg-indigo-600 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    {{ gallery ? 'Update Gallery' : 'Create Gallery' }}
                </button>
            </div>
        </form>
</div>

<!-- Quill Editor for Description -->
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>
// Initialize Quill editor for gallery description
const descriptionQuill = new Quill('#description-editor', {
    theme: 'snow',
    modules: {
        toolbar: [
            ['bold', 'italic', 'underline'],
            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
            ['link'],
            ['clean']
        ]
    }
});

// Sync Quill content with hidden textarea
function syncDescriptionContent() {
    const content = descriptionQuill.root.innerHTML;
    document.getElementById('description').value = content;
}

descriptionQuill.on('text-change', syncDescriptionContent);

// Sync content before form submission
document.querySelector('form').addEventListener('submit', function() {
    syncDescriptionContent();
});

function toggleAccessCode() {
    const privateRadio = document.querySelector('input[name="visibility"][value="private"]');
    const accessCodeField = document.getElementById('access-code-field');
    
    if (privateRadio.checked) {
        accessCodeField.classList.remove('hidden');
    } else {
        accessCodeField.classList.add('hidden');
    }
}

function togglePricing() {
    const paidRadio = document.querySelector('input[name="pricing_type"][value="paid"]');
    const priceField = document.getElementById('price-field');
    
    if (paidRadio.checked) {
        priceField.classList.remove('hidden');
    } else {
        priceField.classList.add('hidden');
    }
}

function previewFile(input) {
    if (input.files && input.files[0]) {
        const file = input.files[0];
        
        // Validate file size (5MB max)
        if (file.size > 5 * 1024 * 1024) {
            alert('File size must be less than 5MB');
            clearFileInput();
            return;
        }
        
        // Validate file type
        if (!file.type.startsWith('image/')) {
            alert('Please select an image file');
            clearFileInput();
            return;
        }
        
        const reader = new FileReader();
        reader.onload = function(e) {
            document.getElementById('preview-image').src = e.target.result;
            document.getElementById('new-image-preview').classList.remove('hidden');
            document.getElementById('upload-area').classList.add('hidden');
        };
        reader.readAsDataURL(file);
    }
}

function clearFileInput() {
    document.getElementById('cover_image').value = '';
    document.getElementById('new-image-preview').classList.add('hidden');
    document.getElementById('upload-area').classList.remove('hidden');
}

function removeCoverImage() {
    document.getElementById('current-image-preview').classList.add('hidden');
    // Add a hidden input to indicate removal
    let removeInput = document.getElementById('remove-cover-image');
    if (!removeInput) {
        removeInput = document.createElement('input');
        removeInput.type = 'hidden';
        removeInput.name = 'remove_cover_image';
        removeInput.id = 'remove-cover-image';
        removeInput.value = '1';
        document.querySelector('form').appendChild(removeInput);
    }
}

// Expiration settings functions
function updateEndDate() {
    const durationDays = document.getElementById('duration_days').value;
    const endDateField = document.getElementById('end_date');
    
    if (durationDays) {
        // Clear the end date field when duration is set
        endDateField.value = '';
    }
}

function clearDuration() {
    const endDate = document.getElementById('end_date').value;
    const durationField = document.getElementById('duration_days');
    
    if (endDate) {
        // Clear the duration field when end date is set
        durationField.value = '';
    }
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    const visibilityRadios = document.querySelectorAll('input[name="visibility"]');
    visibilityRadios.forEach(radio => {
        radio.addEventListener('change', toggleAccessCode);
    });

    // Setup drag and drop
    const uploadArea = document.getElementById('upload-area');
    
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        uploadArea.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    ['dragenter', 'dragover'].forEach(eventName => {
        uploadArea.addEventListener(eventName, highlight, false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
        uploadArea.addEventListener(eventName, unhighlight, false);
    });

    function highlight(e) {
        uploadArea.classList.add('border-indigo-500', 'bg-indigo-50');
    }

    function unhighlight(e) {
        uploadArea.classList.remove('border-indigo-500', 'bg-indigo-50');
    }

    uploadArea.addEventListener('drop', handleDrop, false);

    function handleDrop(e) {
        const dt = e.dataTransfer;
        const files = dt.files;
        
        if (files.length > 0) {
            document.getElementById('cover_image').files = files;
            previewFile(document.getElementById('cover_image'));
        }
    }
});
</script>
{% endblock %}