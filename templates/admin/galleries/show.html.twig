{% extends 'admin/base.html.twig' %}

{% block title %}{{ gallery.title }} - Galleries{% endblock %}

{% block content %}
<!-- Header -->
<div class="bg-white shadow">
    <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4">
                <a href="{{ path('admin_galleries_list') }}" class="text-gray-400 hover:text-gray-600">
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                </a>
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">{{ gallery.title }}</h1>
                    <div class="flex items-center space-x-4 mt-1">
                        <span class="text-sm text-gray-500">{{ gallery.images|length }} images</span>
                        <span class="text-sm text-gray-500">‚Ä¢</span>
                        <span class="text-sm text-gray-500">Updated {{ gallery.updatedAt|date('M j, Y') }}</span>
                        {% if gallery.visibility == 'private' %}
                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-red-100 text-red-800">
                                üîí Private
                            </span>
                        {% else %}
                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800">
                                üåê Public
                            </span>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div class="flex items-center space-x-3">
                <a href="{{ path('admin_galleries_edit', {id: gallery.id}) }}" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50">
                    Edit Gallery
                </a>
                <form method="post" action="{{ path('admin_galleries_delete', {id: gallery.id}) }}" class="inline" onsubmit="return confirm('Are you sure you want to delete this gallery and all its images?')">
                    <input type="hidden" name="_token" value="{{ csrf_token('delete_gallery') }}">
                    <button type="submit" class="bg-red-600 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-red-700">
                        Delete Gallery
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Content -->
<div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <!-- Description -->
        {% if gallery.description %}
            <div class="bg-white rounded-lg shadow p-6 mb-6">
                <p class="text-gray-700">{{ gallery.description }}</p>
            </div>
        {% endif %}

        <!-- Upload Section -->
        <div class="bg-white rounded-lg shadow p-6 mb-6">
            <h2 class="text-lg font-medium text-gray-900 mb-4">Upload Images</h2>
            
            <div class="border-2 border-gray-300 border-dashed rounded-lg p-6" id="upload-zone">
                <div class="text-center">
                    <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                        <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                    <div class="mt-4">
                        <label for="file-upload" class="cursor-pointer">
                            <span class="mt-2 block text-sm font-medium text-gray-900">
                                Drop images here or click to select
                            </span>
                            <input id="file-upload" name="file-upload" type="file" class="sr-only" multiple accept="image/*">
                        </label>
                        <p class="mt-2 text-xs text-gray-500">
                            Supports: JPEG, PNG, GIF, WebP. Max 10MB per file.
                        </p>
                    </div>
                </div>
            </div>

            <!-- Upload Progress -->
            <div id="upload-progress" class="hidden mt-4">
                <div class="bg-gray-200 rounded-full h-2">
                    <div id="progress-bar" class="bg-indigo-600 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                </div>
                <p id="progress-text" class="text-sm text-gray-600 mt-2">Uploading...</p>
            </div>
        </div>

        <!-- Images Grid -->
        {% if gallery.images is empty %}
            <div class="bg-white rounded-lg shadow p-12">
                <div class="text-center">
                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    <h3 class="mt-2 text-sm font-medium text-gray-900">No images yet</h3>
                    <p class="mt-1 text-sm text-gray-500">Upload some images to get started.</p>
                </div>
            </div>
        {% else %}
            <div class="bg-white rounded-lg shadow p-6">
                <h2 class="text-lg font-medium text-gray-900 mb-4">Images ({{ gallery.images|length }})</h2>
                
                <div id="images-grid" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4">
                    {% for image in gallery.images %}
                        <div class="relative group" data-image-id="{{ image.id }}">
                            <div class="aspect-square bg-gray-100 rounded-lg overflow-hidden">
                                <img src="{{ image.thumbnailUrl }}" alt="{{ image.alt }}" class="w-full h-full object-cover group-hover:opacity-75 transition-opacity">
                            </div>
                            
                            <!-- Image Actions -->
                            <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all rounded-lg">
                                <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                    <button onclick="editImage({{ image.id }})" class="bg-white rounded-full p-1 shadow-sm hover:bg-gray-50">
                                        <svg class="h-4 w-4 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                        </svg>
                                    </button>
                                    <button onclick="deleteImage({{ image.id }})" class="bg-white rounded-full p-1 shadow-sm hover:bg-gray-50 ml-1">
                                        <svg class="h-4 w-4 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                        </svg>
                                    </button>
                                </div>
                            </div>

                            <!-- Image Info -->
                            <div class="mt-2 text-xs text-gray-500">
                                <p class="truncate" title="{{ image.originalName }}">{{ image.originalName }}</p>
                                <p>{{ image.formattedSize }}</p>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% endif %}
</div>

<!-- Image Edit Modal -->
<div id="edit-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg max-w-md w-full p-6">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Edit Image</h3>
            <form id="edit-form">
                <div class="space-y-4">
                    <div>
                        <label for="edit-alt" class="block text-sm font-medium text-gray-700">Alt Text</label>
                        <input type="text" id="edit-alt" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                    <div>
                        <label for="edit-caption" class="block text-sm font-medium text-gray-700">Caption</label>
                        <textarea id="edit-caption" rows="3" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"></textarea>
                    </div>
                </div>
                <div class="mt-6 flex justify-end space-x-3">
                    <button type="button" onclick="closeEditModal()" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50">
                        Cancel
                    </button>
                    <button type="submit" class="bg-indigo-600 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-indigo-700">
                        Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
let currentImageId = null;

// File upload handling
document.getElementById('file-upload').addEventListener('change', handleFileSelect);
document.getElementById('upload-zone').addEventListener('drop', handleDrop);
document.getElementById('upload-zone').addEventListener('dragover', handleDragOver);

function handleFileSelect(e) {
    const files = Array.from(e.target.files);
    if (files.length > 0) {
        uploadFiles(files);
    }
}

function handleDrop(e) {
    e.preventDefault();
    const files = Array.from(e.dataTransfer.files).filter(file => file.type.startsWith('image/'));
    if (files.length > 0) {
        uploadFiles(files);
    }
}

function handleDragOver(e) {
    e.preventDefault();
}

function uploadFiles(files) {
    const formData = new FormData();
    files.forEach(file => {
        formData.append('images[]', file);
    });

    const progressDiv = document.getElementById('upload-progress');
    const progressBar = document.getElementById('progress-bar');
    const progressText = document.getElementById('progress-text');
    
    progressDiv.classList.remove('hidden');
    
    fetch(`{{ path('admin_galleries_upload', {id: gallery.id}) }}`, {
        method: 'POST',
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        // Check if response is actually JSON
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
            return response.text().then(text => {
                console.error('Non-JSON response:', text);
                throw new Error('Server returned HTML instead of JSON. Check browser console for details.');
            });
        }
        
        return response.json();
    })
    .then(data => {
        progressDiv.classList.add('hidden');
        
        if (data.success) {
            // Refresh the page to show new images
            location.reload();
        } else {
            alert('Upload failed: ' + (data.error || 'Unknown error'));
        }
    })
    .catch(error => {
        progressDiv.classList.add('hidden');
        console.error('Upload error:', error);
        alert('Upload failed: ' + error.message);
    });
}

function editImage(imageId) {
    currentImageId = imageId;
    document.getElementById('edit-modal').classList.remove('hidden');
}

function closeEditModal() {
    currentImageId = null;
    document.getElementById('edit-modal').classList.add('hidden');
}

function deleteImage(imageId) {
    if (!confirm('Are you sure you want to delete this image?')) {
        return;
    }

    const formData = new FormData();
    formData.append('_token', '{{ csrf_token('delete_image') }}');

    fetch(`{{ path('admin_galleries_delete_image', {galleryId: gallery.id, imageId: '__ID__'}) }}`.replace('__ID__', imageId), {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Remove the image from the grid
            const imageElement = document.querySelector(`[data-image-id="${imageId}"]`);
            if (imageElement) {
                imageElement.remove();
            }
        } else {
            alert('Failed to delete image: ' + (data.error || 'Unknown error'));
        }
    })
    .catch(error => {
        console.error('Delete error:', error);
        alert('Failed to delete image: ' + error.message);
    });
}

// Edit form submission
document.getElementById('edit-form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    if (!currentImageId) return;

    const alt = document.getElementById('edit-alt').value;
    const caption = document.getElementById('edit-caption').value;

    fetch(`{{ path('admin_galleries_update_image', {galleryId: gallery.id, imageId: '__ID__'}) }}`.replace('__ID__', currentImageId), {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            alt: alt,
            caption: caption
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            closeEditModal();
            // Optionally refresh or update the UI
        } else {
            alert('Failed to update image: ' + (data.error || 'Unknown error'));
        }
    })
    .catch(error => {
        console.error('Update error:', error);
        alert('Failed to update image: ' + error.message);
    });
});
</script>
{% endblock %}