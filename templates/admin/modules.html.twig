{% extends 'admin/base.html.twig' %}

{% block title %}{{ 'modules.title'|trans({}, 'admin') }} - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('assets/modules.css') }}">
{% endblock %}

{% block breadcrumb_items %}
    <li>
        <div class="flex items-center">
            <svg class="flex-shrink-0 h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
            <span class="ml-4 text-sm font-medium text-gray-500" aria-current="page">{{ 'modules.title'|trans({}, 'admin') }}</span>
        </div>
    </li>
{% endblock %}

{% block content %}
<!-- Header -->
<div class="bg-white shadow">
    <div class="max-w-7xl mx-auto py-4 sm:py-6 px-4 sm:px-6 lg:px-8">
        <div class="flex items-center space-x-2 sm:space-x-4">
            <h1 class="text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900">
                {{ 'modules.title'|trans({}, 'admin') }}
            </h1>
        </div>
        <p class="mt-2 text-sm text-gray-600">
            Activez ou désactivez les modules pour contrôler quelles fonctionnalités sont disponibles dans le CMS.
        </p>
    </div>
</div>

<!-- Content -->
<div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <div class="space-y-6">
        <div class="bg-white shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">

                    <div class="mt-6 flow-root">
                        <ul role="list" class="-my-5 divide-y divide-gray-200">
                            {% for module in modules %}
                                <li class="py-5">
                                    <div class="relative focus-within:ring-2 focus-within:ring-indigo-500">
                                        <div class="flex justify-between items-center">
                                            <div class="flex items-center space-x-3">
                                                <div class="flex-shrink-0">
                                                    <div class="w-10 h-10 {{ module.active ? 'bg-green-500' : 'bg-gray-400' }} rounded-full flex items-center justify-center">
                                                        <span class="text-white font-medium text-sm">{{ module.name|slice(0, 2)|upper }}</span>
                                                    </div>
                                                </div>
                                                <div class="min-w-0 flex-1">
                                                    <div class="focus:outline-none">
                                                        <p class="text-sm font-medium text-gray-900">{{ module.displayName }}</p>
                                                        <p class="text-sm text-gray-500">{{ module.description ?: ('modules.no_description'|trans({}, 'admin')) }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="flex items-center space-x-2 module-actions">
                                                {% if module.active %}
                                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                        {{ 'status.active'|trans({}, 'admin') }}
                                                    </span>
                                                    <button 
                                                        type="button"
                                                        class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors"
                                                        onclick="toggleModule('{{ module.name }}', false)"
                                                        data-module="{{ module.name }}"
                                                        data-action="deactivate"
                                                    >
                                                        {{ 'actions.deactivate'|trans({}, 'admin') }}
                                                    </button>
                                                {% else %}
                                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                                        {{ 'status.inactive'|trans({}, 'admin') }}
                                                    </span>
                                                    <button 
                                                        type="button"
                                                        class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors"
                                                        onclick="toggleModule('{{ module.name }}', true)"
                                                        data-module="{{ module.name }}"
                                                        data-action="activate"
                                                    >
                                                        {{ 'actions.activate'|trans({}, 'admin') }}
                                                    </button>
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

<!-- Clean Module Management Script -->
<script>
function toggleModule(moduleName, activate) {
    const action = activate ? 'activate' : 'deactivate';
    
    if (!confirm(`Êtes-vous sûr de vouloir ${action === 'activate' ? 'activer' : 'désactiver'} le module ${moduleName} ?`)) {
        return;
    }
    
    // Disable all buttons during request
    const buttons = document.querySelectorAll('button[data-module]');
    buttons.forEach(btn => {
        btn.disabled = true;
        btn.classList.add('opacity-50');
    });
    
    const formData = new FormData();
    formData.append('action', action);
    
    fetch(`/admin/modules/${moduleName}/toggle`, {
        method: 'POST',
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Show success message
            const notification = document.createElement('div');
            notification.className = 'fixed top-4 right-4 bg-green-500 text-white p-4 rounded-md shadow-lg z-50';
            notification.textContent = data.message;
            document.body.appendChild(notification);
            
            // Reload page after short delay
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        } else {
            alert('{{ 'errors.operation_error'|trans({}, 'admin') }} ' + (data.message || '{{ 'errors.unknown_error'|trans({}, 'admin') }}'));
            // Re-enable buttons
            buttons.forEach(btn => {
                btn.disabled = false;
                btn.classList.remove('opacity-50');
            });
        }
    })
    .catch(error => {
        alert('Erreur réseau: ' + error.message);
        // Re-enable buttons
        buttons.forEach(btn => {
            btn.disabled = false;
            btn.classList.remove('opacity-50');
        });
    });
}
</script>
{% endblock %}