{% extends 'admin/base.html.twig' %}

{% block page_title %}{{ isNew ? 'Nouvel Événement' : 'Modifier l\'Événement' }}{% endblock %}

{% block breadcrumb_items %}
<li class="flex items-center">
    <svg class="flex-shrink-0 h-4 w-4 text-gray-300 mx-1" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
    </svg>
    <a href="{{ path('admin_events_list') }}" class="text-gray-500 hover:text-gray-700">Événements</a>
</li>
<li class="flex items-center">
    <svg class="flex-shrink-0 h-4 w-4 text-gray-300 mx-1" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
    </svg>
    <span class="text-gray-500">{{ isNew ? 'Nouveau' : 'Modifier' }}</span>
</li>
{% endblock %}

{% block content %}
<div class="max-w-4xl">
    <form method="POST" class="space-y-6">
        <div class="bg-white shadow-sm rounded-lg">
            <div class="px-6 py-4 border-b border-gray-200">
                <h2 class="text-lg font-medium text-gray-900">Informations de l'événement</h2>
            </div>
            
            <div class="px-6 py-4 space-y-6">
                <!-- Titre -->
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700 mb-2">
                        Titre de l'événement *
                    </label>
                    <input type="text" id="title" name="title" 
                           value="{{ event.title ?? '' }}" 
                           required
                           class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                </div>

                <!-- Description -->
                <div>
                    <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
                        Description
                    </label>
                    <textarea id="description" name="description" rows="4"
                              class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">{{ event.description ?? '' }}</textarea>
                </div>

                <!-- Dates et heures -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label for="start_date" class="block text-sm font-medium text-gray-700 mb-2">
                            Date et heure de début *
                        </label>
                        <input type="datetime-local" id="start_date" name="start_date" 
                               value="{{ event.startDate ? event.startDate|date('Y-m-d\\TH:i') : '' }}" 
                               required
                               class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                    </div>
                    <div>
                        <label for="end_date" class="block text-sm font-medium text-gray-700 mb-2">
                            Date et heure de fin
                        </label>
                        <input type="datetime-local" id="end_date" name="end_date" 
                               value="{{ event.endDate ? event.endDate|date('Y-m-d\\TH:i') : '' }}"
                               class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                    </div>
                </div>

                <!-- Lieu -->
                <div>
                    <label for="location" class="block text-sm font-medium text-gray-700 mb-2">
                        Lieu
                    </label>
                    <input type="text" id="location" name="location" 
                           value="{{ event.location ?? '' }}"
                           placeholder="Ex: Piscine Océanis, Port de Vannes..."
                           class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                </div>

                <!-- Type d'événement -->
                <div>
                    <label for="event_type" class="block text-sm font-medium text-gray-700 mb-2">
                        Type d'événement *
                    </label>
                    {% if eventTypes|length > 0 %}
                        <select id="event_type" name="event_type_id" required
                                class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                            <option value="">-- Sélectionner un type d'événement --</option>
                            {% for eventType in eventTypes %}
                                <option value="{{ eventType.id }}" 
                                        data-color="{{ eventType.color }}"
                                        {{ event.eventType and event.eventType.id == eventType.id ? 'selected' : '' }}>
                                    {{ eventType.name }}
                                </option>
                            {% endfor %}
                        </select>
                        <p class="mt-1 text-sm text-gray-500">
                            Aucun type ne vous convient ? <a href="{{ path('admin_event_types_new') }}" target="_blank" class="text-club-orange hover:text-club-orange-dark">Créez un nouveau type</a>
                        </p>
                    {% else %}
                        <div class="rounded-md bg-yellow-50 p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-yellow-800">Aucun type d'événement configuré</h3>
                                    <div class="mt-2 text-sm text-yellow-700">
                                        <p>Vous devez d'abord créer des types d'événements avant de pouvoir créer un événement.</p>
                                    </div>
                                    <div class="mt-4">
                                        <a href="{{ path('admin_event_types_new') }}" 
                                           class="text-sm bg-yellow-50 text-yellow-800 rounded-md p-2 hover:bg-yellow-100">
                                            Créer un type d'événement →
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                </div>

                <!-- Récurrence -->
                <div class="sm:col-span-2">
                    <div class="flex items-center mb-4">
                        <input type="checkbox" 
                               name="is_recurring" 
                               id="is_recurring" 
                               value="1"
                               {{ event.isRecurring ? 'checked' : '' }}
                               onchange="toggleRecurrenceFields(this.checked)"
                               class="h-4 w-4 text-club-orange focus:ring-club-orange border-gray-300 rounded">
                        <label for="is_recurring" class="ml-2 block text-sm font-medium text-gray-900">
                            Événement récurrent
                        </label>
                    </div>
                    
                    <div id="recurrence_fields" style="display: {{ event.isRecurring ? 'block' : 'none' }}">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg">
                            <!-- Type de récurrence -->
                            <div>
                                <label for="recurrence_type" class="block text-sm font-medium text-gray-700 mb-2">
                                    Fréquence
                                </label>
                                <select name="recurrence_type" id="recurrence_type"
                                        onchange="toggleWeekdayFields(this.value)"
                                        class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                                    <option value="weekly" {{ event.recurrenceType == 'weekly' ? 'selected' : '' }}>Hebdomadaire</option>
                                    <option value="monthly" {{ event.recurrenceType == 'monthly' ? 'selected' : '' }}>Mensuel</option>
                                    <option value="daily" {{ event.recurrenceType == 'daily' ? 'selected' : '' }}>Quotidien</option>
                                </select>
                            </div>
                            
                            <!-- Intervalle -->
                            <div>
                                <label for="recurrence_interval" class="block text-sm font-medium text-gray-700 mb-2">
                                    Répéter tous les
                                </label>
                                <div class="flex items-center space-x-2">
                                    <input type="number" 
                                           name="recurrence_interval" 
                                           id="recurrence_interval" 
                                           value="{{ event.recurrenceInterval ?? 1 }}"
                                           min="1" max="12"
                                           class="block w-20 border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                                    <span class="text-sm text-gray-500" id="interval_label">semaine(s)</span>
                                </div>
                            </div>
                            
                            <!-- Jours de la semaine (pour hebdomadaire) -->
                            <div class="md:col-span-2" id="weekdays_field" style="display: {{ event.recurrenceType == 'weekly' ? 'block' : 'none' }}">
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    Jours de la semaine
                                </label>
                                <div class="flex flex-wrap gap-2">
                                    {% set weekdays = [
                                        {value: 1, label: 'Lun'},
                                        {value: 2, label: 'Mar'},
                                        {value: 3, label: 'Mer'},
                                        {value: 4, label: 'Jeu'},
                                        {value: 5, label: 'Ven'},
                                        {value: 6, label: 'Sam'},
                                        {value: 7, label: 'Dim'}
                                    ] %}
                                    {% for weekday in weekdays %}
                                        <label class="inline-flex items-center">
                                            <input type="checkbox" 
                                                   name="recurrence_weekdays[]" 
                                                   value="{{ weekday.value }}"
                                                   {{ event.recurrenceWeekdays and weekday.value in event.recurrenceWeekdays ? 'checked' : '' }}
                                                   class="h-4 w-4 text-club-orange focus:ring-club-orange border-gray-300 rounded">
                                            <span class="ml-1 text-sm text-gray-700">{{ weekday.label }}</span>
                                        </label>
                                    {% endfor %}
                                </div>
                                <p class="mt-1 text-xs text-gray-500">Si aucun jour n'est sélectionné, l'événement se répétera le même jour de la semaine</p>
                            </div>
                            
                            <!-- Date de fin de récurrence -->
                            <div class="md:col-span-2">
                                <label for="recurrence_end_date" class="block text-sm font-medium text-gray-700 mb-2">
                                    Répéter jusqu'au
                                </label>
                                <input type="date" 
                                       name="recurrence_end_date" 
                                       id="recurrence_end_date" 
                                       value="{{ event.recurrenceEndDate ? event.recurrenceEndDate|date('Y-m-d') : '' }}"
                                       class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                                <p class="mt-1 text-xs text-gray-500">Laisser vide pour répéter sur 1 an maximum</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Participants -->
                <div>
                    <label for="max_participants" class="block text-sm font-medium text-gray-700 mb-2">
                        Nombre maximum de participants
                    </label>
                    <input type="number" id="max_participants" name="max_participants" 
                           value="{{ event.maxParticipants ?? '' }}" 
                           min="1" max="100"
                           placeholder="Laisser vide pour aucune limite"
                           class="block w-32 border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                    <p class="mt-1 text-sm text-gray-500">
                        Si défini, les utilisateurs pourront voir le nombre de places disponibles
                    </p>
                </div>
            </div>
        </div>

        <!-- Conditions d'inscription -->
        <div class="bg-white shadow-sm rounded-lg">
            <div class="px-6 py-4 border-b border-gray-200">
                <h2 class="text-lg font-medium text-gray-900">Conditions d'inscription</h2>
                <p class="mt-1 text-sm text-gray-500">Définissez les prérequis pour participer à cet événement</p>
            </div>
            
            <div class="px-6 py-4 space-y-6">
                <!-- Niveau de plongée minimum -->
                <div>
                    <label for="min_diving_level" class="block text-sm font-medium text-gray-700 mb-2">
                        Niveau de plongée minimum requis
                    </label>
                    <select id="min_diving_level" name="min_diving_level"
                            class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                        <option value="">-- Aucune restriction --</option>
                        <optgroup label="Plongeur">
                            <option value="N1" {{ event.minDivingLevel == 'N1' ? 'selected' : '' }}>N1 - Plongeur Encadré 20m</option>
                            <option value="N2" {{ event.minDivingLevel == 'N2' ? 'selected' : '' }}>N2 - Plongeur Autonome 20m / Encadré 40m</option>
                            <option value="N3" {{ event.minDivingLevel == 'N3' ? 'selected' : '' }}>N3 - Plongeur Autonome 60m</option>
                            <option value="N4" {{ event.minDivingLevel == 'N4' ? 'selected' : '' }}>N4 - Guide de Palanquée</option>
                            <option value="N5" {{ event.minDivingLevel == 'N5' ? 'selected' : '' }}>N5 - Directeur de Plongée</option>
                        </optgroup>
                        <optgroup label="Plongeur (Ancien système)">
                            <option value="P1" {{ event.minDivingLevel == 'P1' ? 'selected' : '' }}>P1 - Premier Degré</option>
                            <option value="P2" {{ event.minDivingLevel == 'P2' ? 'selected' : '' }}>P2 - Deuxième Degré</option>
                            <option value="P3" {{ event.minDivingLevel == 'P3' ? 'selected' : '' }}>P3 - Troisième Degré</option>
                            <option value="P4" {{ event.minDivingLevel == 'P4' ? 'selected' : '' }}>P4 - Quatrième Degré</option>
                            <option value="P5" {{ event.minDivingLevel == 'P5' ? 'selected' : '' }}>P5 - Cinquième Degré</option>
                        </optgroup>
                        <optgroup label="Encadrement">
                            <option value="E1" {{ event.minDivingLevel == 'E1' ? 'selected' : '' }}>E1 - Initiateur</option>
                            <option value="E2" {{ event.minDivingLevel == 'E2' ? 'selected' : '' }}>E2 - Moniteur Fédéral 1er Degré</option>
                            <option value="E3" {{ event.minDivingLevel == 'E3' ? 'selected' : '' }}>E3 - Moniteur Fédéral 2ème Degré</option>
                            <option value="E4" {{ event.minDivingLevel == 'E4' ? 'selected' : '' }}>E4 - Moniteur Fédéral 3ème Degré</option>
                        </optgroup>
                        <optgroup label="Secours">
                            <option value="RIFAP" {{ event.minDivingLevel == 'RIFAP' ? 'selected' : '' }}>RIFAP</option>
                            <option value="RIFAP_recyclage" {{ event.minDivingLevel == 'RIFAP_recyclage' ? 'selected' : '' }}>RIFAP Recyclage</option>
                        </optgroup>
                    </select>
                </div>

                <!-- Âge -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label for="min_age" class="block text-sm font-medium text-gray-700 mb-2">
                            Âge minimum (années)
                        </label>
                        <input type="number" id="min_age" name="min_age" 
                               value="{{ event.minAge ?? '' }}" 
                               min="8" max="99"
                               placeholder="Ex: 16"
                               class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                    </div>
                    <div>
                        <label for="max_age" class="block text-sm font-medium text-gray-700 mb-2">
                            Âge maximum (années)
                        </label>
                        <input type="number" id="max_age" name="max_age" 
                               value="{{ event.maxAge ?? '' }}" 
                               min="8" max="99"
                               placeholder="Ex: 65"
                               class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                    </div>
                </div>

                <!-- Certificat médical -->
                <div>
                    <div class="flex items-center mb-4">
                        <input type="checkbox" 
                               name="requires_medical_certificate" 
                               id="requires_medical_certificate" 
                               value="1"
                               {{ event.requiresMedicalCertificate ? 'checked' : '' }}
                               onchange="toggleMedicalCertificateFields(this.checked)"
                               class="h-4 w-4 text-club-orange focus:ring-club-orange border-gray-300 rounded">
                        <label for="requires_medical_certificate" class="ml-2 block text-sm font-medium text-gray-900">
                            Certificat médical requis
                        </label>
                    </div>
                    
                    <div id="medical_certificate_fields" style="display: {{ event.requiresMedicalCertificate ? 'block' : 'none' }}">
                        <div class="ml-6">
                            <label for="medical_certificate_validity_days" class="block text-sm font-medium text-gray-700 mb-2">
                                Validité du certificat médical (jours)
                            </label>
                            <input type="number" 
                                   name="medical_certificate_validity_days" 
                                   id="medical_certificate_validity_days" 
                                   value="{{ event.medicalCertificateValidityDays ?? 365 }}"
                                   min="30" max="1095"
                                   placeholder="365"
                                   class="block w-32 border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                            <p class="mt-1 text-xs text-gray-500">Par défaut : 365 jours (1 an)</p>
                        </div>
                    </div>
                </div>

                <!-- Test de natation -->
                <div>
                    <div class="flex items-center">
                        <input type="checkbox" 
                               name="requires_swimming_test" 
                               id="requires_swimming_test" 
                               value="1"
                               {{ event.requiresSwimmingTest ? 'checked' : '' }}
                               class="h-4 w-4 text-club-orange focus:ring-club-orange border-gray-300 rounded">
                        <label for="requires_swimming_test" class="ml-2 block text-sm font-medium text-gray-900">
                            Test de natation requis
                        </label>
                    </div>
                    <p class="mt-1 text-sm text-gray-500 ml-6">
                        Le participant doit avoir réussi le test de natation du club
                    </p>
                </div>

                <!-- Conditions supplémentaires -->
                <div>
                    <label for="additional_requirements" class="block text-sm font-medium text-gray-700 mb-2">
                        Conditions supplémentaires
                    </label>
                    <textarea id="additional_requirements" name="additional_requirements" rows="3"
                              placeholder="Ex: Avoir son propre matériel, expérience en plongée de nuit requise..."
                              class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">{{ event.additionalRequirements ?? '' }}</textarea>
                    <p class="mt-1 text-sm text-gray-500">
                        Décrivez les conditions particulières non couvertes par les champs ci-dessus
                    </p>
                </div>

                <!-- Statut (pour modification seulement) -->
                {% if not isNew %}
                <div>
                    <label for="status" class="block text-sm font-medium text-gray-700 mb-2">
                        Statut
                    </label>
                    <select id="status" name="status" 
                            class="block w-48 border-gray-300 rounded-md shadow-sm focus:ring-club-orange focus:border-club-orange sm:text-sm">
                        <option value="active" {{ event.status == 'active' ? 'selected' : '' }}>Actif</option>
                        <option value="cancelled" {{ event.status == 'cancelled' ? 'selected' : '' }}>Annulé</option>
                        <option value="completed" {{ event.status == 'completed' ? 'selected' : '' }}>Terminé</option>
                        <option value="draft" {{ event.status == 'draft' ? 'selected' : '' }}>Brouillon</option>
                    </select>
                </div>
                {% endif %}
            </div>
        </div>

        <!-- Actions -->
        <div class="flex items-center justify-between">
            <a href="{{ path('admin_events_list') }}" 
               class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                Annuler
            </a>
            
            <div class="flex items-center space-x-3">
                {% if not isNew %}
                    <a href="{{ path('calendar_event_detail', {id: event.id}) }}" 
                       target="_blank"
                       class="inline-flex items-center px-4 py-2 border border-club-blue text-sm font-medium rounded-md text-club-blue bg-white hover:bg-club-blue hover:text-white">
                        <svg class="-ml-1 mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-2M14 4h6m0 0v6m0-6L10 14"/>
                        </svg>
                        Prévisualiser
                    </a>
                {% endif %}
                
                <button type="submit" 
                        class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-club-orange hover:bg-club-orange-dark">
                    <svg class="-ml-1 mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                    </svg>
                    {{ isNew ? 'Créer l\'événement' : 'Enregistrer les modifications' }}
                </button>
            </div>
        </div>
    </form>
</div>

<script>
function toggleRecurrenceFields(isRecurring) {
    const fields = document.getElementById('recurrence_fields');
    fields.style.display = isRecurring ? 'block' : 'none';
}

function toggleWeekdayFields(recurrenceType) {
    const weekdaysField = document.getElementById('weekdays_field');
    const intervalLabel = document.getElementById('interval_label');
    
    if (recurrenceType === 'weekly') {
        weekdaysField.style.display = 'block';
        intervalLabel.textContent = 'semaine(s)';
    } else if (recurrenceType === 'monthly') {
        weekdaysField.style.display = 'none';
        intervalLabel.textContent = 'mois';
    } else if (recurrenceType === 'daily') {
        weekdaysField.style.display = 'none';
        intervalLabel.textContent = 'jour(s)';
    }
}

function toggleMedicalCertificateFields(requiresCertificate) {
    const fields = document.getElementById('medical_certificate_fields');
    fields.style.display = requiresCertificate ? 'block' : 'none';
}

// Initialiser l'état au chargement
document.addEventListener('DOMContentLoaded', function() {
    const recurrenceType = document.getElementById('recurrence_type').value;
    toggleWeekdayFields(recurrenceType);
});
</script>
{% endblock %}