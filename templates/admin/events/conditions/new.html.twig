{% extends 'admin/base.html.twig' %}

{% block title %}Nouvelle condition - {{ event.title }}{% endblock %}

{% block body %}
<div class="bg-white rounded-lg shadow-sm border border-gray-200">
    <div class="p-6 border-b border-gray-200">
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-2xl font-semibold text-gray-900">Nouvelle condition d'accès</h1>
                <p class="mt-1 text-sm text-gray-600">Événement : <strong>{{ event.title }}</strong></p>
            </div>
            <a href="{{ path('admin_event_conditions_index', {eventId: event.id}) }}" 
               class="inline-flex items-center px-4 py-2 bg-gray-600 text-white text-sm font-medium rounded-md hover:bg-gray-700">
                Annuler
            </a>
        </div>
    </div>

    <div class="p-6">
        <form method="post" class="space-y-6">
            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
                <div>
                    <label for="entity_class" class="block text-sm font-medium text-gray-700">
                        Type d'entité
                    </label>
                    <select id="entity_class" name="entity_class" required 
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-club-orange focus:ring-club-orange">
                        <option value="">Sélectionner une entité...</option>
                        {% for class, label in availableEntities %}
                            <option value="{{ class }}">{{ label }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div>
                    <label for="attribute_name" class="block text-sm font-medium text-gray-700">
                        Attribut
                    </label>
                    <select id="attribute_name" name="attribute_name" required 
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-club-orange focus:ring-club-orange"
                            disabled>
                        <option value="">Choisir d'abord une entité...</option>
                    </select>
                </div>

                <div>
                    <label for="operator" class="block text-sm font-medium text-gray-700">
                        Opérateur
                    </label>
                    <select id="operator" name="operator" required 
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-club-orange focus:ring-club-orange">
                        <option value="">Sélectionner un opérateur...</option>
                        {% for op, label in availableOperators %}
                            <option value="{{ op }}">{{ label }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div>
                    <label for="value" class="block text-sm font-medium text-gray-700">
                        Valeur
                    </label>
                    <input type="text" id="value" name="value" 
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-club-orange focus:ring-club-orange"
                           placeholder="Valeur à comparer">
                    <p class="mt-1 text-xs text-gray-500">
                        Pour les opérateurs "in" et "not_in", séparez les valeurs par des virgules
                    </p>
                </div>
            </div>

            <div>
                <label for="error_message" class="block text-sm font-medium text-gray-700">
                    Message d'erreur personnalisé
                </label>
                <textarea id="error_message" name="error_message" rows="3" 
                          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-club-orange focus:ring-club-orange"
                          placeholder="Message affiché si la condition n'est pas respectée (optionnel)"></textarea>
                <p class="mt-1 text-xs text-gray-500">
                    Si vide, un message par défaut sera généré automatiquement
                </p>
            </div>

            <div class="flex justify-end space-x-3">
                <a href="{{ path('admin_event_conditions_index', {eventId: event.id}) }}" 
                   class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                    Annuler
                </a>
                <button type="submit" 
                        class="inline-flex items-center px-4 py-2 bg-club-orange text-white text-sm font-medium rounded-md hover:bg-club-orange-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-club-orange">
                    Créer la condition
                </button>
            </div>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const entitySelect = document.getElementById('entity_class');
    const attributeSelect = document.getElementById('attribute_name');
    
    entitySelect.addEventListener('change', function() {
        const entityClass = this.value;
        
        if (!entityClass) {
            attributeSelect.innerHTML = '<option value="">Choisir d\'abord une entité...</option>';
            attributeSelect.disabled = true;
            return;
        }
        
        fetch(`{{ path('admin_event_conditions_get_attributes', {eventId: event.id, entityClass: '__ENTITY_CLASS__'}) }}`.replace('__ENTITY_CLASS__', encodeURIComponent(entityClass)))
            .then(response => response.json())
            .then(data => {
                attributeSelect.innerHTML = '<option value="">Sélectionner un attribut...</option>';
                
                for (const [key, label] of Object.entries(data.attributes)) {
                    const option = document.createElement('option');
                    option.value = key;
                    option.textContent = label;
                    attributeSelect.appendChild(option);
                }
                
                attributeSelect.disabled = false;
            })
            .catch(error => {
                console.error('Erreur lors du chargement des attributs:', error);
                attributeSelect.innerHTML = '<option value="">Erreur lors du chargement</option>';
            });
    });
});
</script>
{% endblock %}